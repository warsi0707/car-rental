// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                             String @id @default(cuid())
  name                           String
  email                          String
  password                       String
  // isAdmin                        Boolean @default(false)
  role                           String @default("USER") // USER or ADMIN
  bookings                       Booking[]
  cars                           Car[]
}


model Car {
  id                            String @id @default(cuid())
  name                          String
  content                       String
  brand                         String
  modelYear                     Int
  pricePerDay                   Float
  images                        String[]
  properties                    String[]
  available                     Boolean @default(true)
  bookings                      Booking[]

  ownerId                       String
  owner                         User @relation(fields: [ownerId], references: [id])
}

model Booking {
  id                           String @id @default(cuid())

  userId                       String
  user                         User @relation(fields: [userId], references: [id])

  name                        String
  email                       String
  phone                       String
  address                     String
  peopleCount                 Int
  message                    String?

  carId                        String
  car                          Car @relation(fields: [carId], references: [id])

  startDate                    DateTime
  endDate                      DateTime
  totalCost                    Float

  createdAt                   DateTime @default(now())
}